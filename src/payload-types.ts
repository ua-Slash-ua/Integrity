/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    'category-app': CategoryApp;
    users: User;
    media: Media;
    posts: Post;
    categories: Category;
    pages: Page;
    faq: Faq;
    applications: Application;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    categories: {
      posts: 'posts';
    };
  };
  collectionsSelect: {
    'category-app': CategoryAppSelect<false> | CategoryAppSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    faq: FaqSelect<false> | FaqSelect<true>;
    applications: ApplicationsSelect<false> | ApplicationsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    main: Main;
    menu: Menu;
  };
  globalsSelect: {
    main: MainSelect<false> | MainSelect<true>;
    menu: MenuSelect<false> | MenuSelect<true>;
  };
  locale: 'en' | 'ua';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "category-app".
 */
export interface CategoryApp {
  id: string;
  title: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title?: string | null;
  categories?: (string | Category)[] | null;
  featuredImage?: (string | null) | Media;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  readingTime?: number | null;
  slug: string;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title?: string | null;
  icon?: (string | null) | Media;
  description?: string | null;
  posts?: {
    docs?: (string | Post)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  slug: string;
  title: string;
  description?: string | null;
  blocks?:
    | (
        | {
            enabled?: boolean | null;
            subtitle: string;
            title: string;
            description?: string | null;
            firstButton?: string | null;
            lastButton?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero-block';
          }
        | {
            enabled?: boolean | null;
            subtitle: string;
            title: string;
            cards?:
              | {
                  icon?: (string | null) | Media;
                  label?: string | null;
                  title?: string | null;
                  description?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'achievements-block';
          }
        | {
            enabled?: boolean | null;
            subtitle: string;
            title: string;
            case?:
              | {
                  case_title?: string | null;
                  case_location?: string | null;
                  case_client_website?: string | null;
                  case_client?: string | null;
                  case_goal?: string | null;
                  case_time?: string | null;
                  case_wwd?:
                    | {
                        point?: string | null;
                        id?: string | null;
                      }[]
                    | null;
                  case_image?: (string | null) | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cases-block';
          }
        | {
            enabled?: boolean | null;
            subtitle: string;
            title: string;
            service?:
              | {
                  service_title?: string | null;
                  service_description?: string | null;
                  service_icon?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'services-block';
          }
        | {
            enabled?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'order-call-block';
          }
        | {
            enabled?: boolean | null;
            subtitle: string;
            title: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'what-us-block';
          }
        | {
            enabled?: boolean | null;
            subtitle: string;
            title: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'expertise-block';
          }
        | {
            enabled?: boolean | null;
            subtitle: string;
            title: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'workflow-block';
          }
        | {
            enabled?: boolean | null;
            subtitle: string;
            title: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'outcomes-block';
          }
        | {
            enabled?: boolean | null;
            subtitle: string;
            title: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'about-founder-block';
          }
        | {
            enabled?: boolean | null;
            subtitle: string;
            title: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'our-team-block';
          }
        | {
            enabled?: boolean | null;
            subtitle: string;
            title: string;
            review?:
              | {
                  rating?: string | null;
                  client_name?: string | null;
                  location?: string | null;
                  client_image?: (string | null) | Media;
                  quote?: string | null;
                  review_content?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'reviews-block';
          }
        | {
            enabled?: boolean | null;
            subtitle: string;
            title: string;
            tariff?:
              | {
                  name_tariff: string;
                  title: string;
                  description: string;
                  result: {
                    points: string;
                    id?: string | null;
                  }[];
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'tariffs-block';
          }
        | {
            enabled?: boolean | null;
            subtitle: string;
            title: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'articles-block';
          }
        | {
            enabled?: boolean | null;
            subtitle: string;
            title: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'faq-block';
          }
        | {
            enabled?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'order-call-extend-block';
          }
      )[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq".
 */
export interface Faq {
  id: string;
  question: string;
  answer: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "applications".
 */
export interface Application {
  id: string;
  category: string | CategoryApp;
  isView?: boolean | null;
  meta?:
    | {
        key: string;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'category-app';
        value: string | CategoryApp;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'faq';
        value: string | Faq;
      } | null)
    | ({
        relationTo: 'applications';
        value: string | Application;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "category-app_select".
 */
export interface CategoryAppSelect<T extends boolean = true> {
  title?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  categories?: T;
  featuredImage?: T;
  content?: T;
  readingTime?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  icon?: T;
  description?: T;
  posts?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  slug?: T;
  title?: T;
  description?: T;
  blocks?:
    | T
    | {
        'hero-block'?:
          | T
          | {
              enabled?: T;
              subtitle?: T;
              title?: T;
              description?: T;
              firstButton?: T;
              lastButton?: T;
              id?: T;
              blockName?: T;
            };
        'achievements-block'?:
          | T
          | {
              enabled?: T;
              subtitle?: T;
              title?: T;
              cards?:
                | T
                | {
                    icon?: T;
                    label?: T;
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        'cases-block'?:
          | T
          | {
              enabled?: T;
              subtitle?: T;
              title?: T;
              case?:
                | T
                | {
                    case_title?: T;
                    case_location?: T;
                    case_client_website?: T;
                    case_client?: T;
                    case_goal?: T;
                    case_time?: T;
                    case_wwd?:
                      | T
                      | {
                          point?: T;
                          id?: T;
                        };
                    case_image?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        'services-block'?:
          | T
          | {
              enabled?: T;
              subtitle?: T;
              title?: T;
              service?:
                | T
                | {
                    service_title?: T;
                    service_description?: T;
                    service_icon?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        'order-call-block'?:
          | T
          | {
              enabled?: T;
              id?: T;
              blockName?: T;
            };
        'what-us-block'?:
          | T
          | {
              enabled?: T;
              subtitle?: T;
              title?: T;
              id?: T;
              blockName?: T;
            };
        'expertise-block'?:
          | T
          | {
              enabled?: T;
              subtitle?: T;
              title?: T;
              id?: T;
              blockName?: T;
            };
        'workflow-block'?:
          | T
          | {
              enabled?: T;
              subtitle?: T;
              title?: T;
              id?: T;
              blockName?: T;
            };
        'outcomes-block'?:
          | T
          | {
              enabled?: T;
              subtitle?: T;
              title?: T;
              id?: T;
              blockName?: T;
            };
        'about-founder-block'?:
          | T
          | {
              enabled?: T;
              subtitle?: T;
              title?: T;
              id?: T;
              blockName?: T;
            };
        'our-team-block'?:
          | T
          | {
              enabled?: T;
              subtitle?: T;
              title?: T;
              id?: T;
              blockName?: T;
            };
        'reviews-block'?:
          | T
          | {
              enabled?: T;
              subtitle?: T;
              title?: T;
              review?:
                | T
                | {
                    rating?: T;
                    client_name?: T;
                    location?: T;
                    client_image?: T;
                    quote?: T;
                    review_content?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        'tariffs-block'?:
          | T
          | {
              enabled?: T;
              subtitle?: T;
              title?: T;
              tariff?:
                | T
                | {
                    name_tariff?: T;
                    title?: T;
                    description?: T;
                    result?:
                      | T
                      | {
                          points?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        'articles-block'?:
          | T
          | {
              enabled?: T;
              subtitle?: T;
              title?: T;
              id?: T;
              blockName?: T;
            };
        'faq-block'?:
          | T
          | {
              enabled?: T;
              subtitle?: T;
              title?: T;
              id?: T;
              blockName?: T;
            };
        'order-call-extend-block'?:
          | T
          | {
              enabled?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq_select".
 */
export interface FaqSelect<T extends boolean = true> {
  question?: T;
  answer?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "applications_select".
 */
export interface ApplicationsSelect<T extends boolean = true> {
  category?: T;
  isView?: T;
  meta?:
    | T
    | {
        key?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "main".
 */
export interface Main {
  id: string;
  'contact-info'?: {
    phone?: string | null;
    email?: string | null;
  };
  'social-items'?: {
    whatsapp?: string | null;
    telegram?: string | null;
    youtube?: string | null;
  };
  button?: string | null;
  logo?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menu".
 */
export interface Menu {
  id: string;
  'header-menu'?:
    | {
        label: string;
        link: string;
        id?: string | null;
      }[]
    | null;
  'footer-menu'?:
    | {
        label: string;
        link: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "main_select".
 */
export interface MainSelect<T extends boolean = true> {
  'contact-info'?:
    | T
    | {
        phone?: T;
        email?: T;
      };
  'social-items'?:
    | T
    | {
        whatsapp?: T;
        telegram?: T;
        youtube?: T;
      };
  button?: T;
  logo?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menu_select".
 */
export interface MenuSelect<T extends boolean = true> {
  'header-menu'?:
    | T
    | {
        label?: T;
        link?: T;
        id?: T;
      };
  'footer-menu'?:
    | T
    | {
        label?: T;
        link?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}